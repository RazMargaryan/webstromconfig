<templateSet group="user">
  <template name="ndcontroller" value="import _ from 'lodash';&#10;import Utils from '../services/Utils';&#10;&#10;class Controller {&#10;  static async index(req, res, next) {&#10;    try {&#10;      console.log(111111);&#10;    } catch (e) {&#10;      next(e);&#10;    }&#10;&#10;    res.json({&#10;      status: 'ok',&#10;      message: 'Response',&#10;    });&#10;  }&#10;}&#10;&#10;export default UserController;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="ES6_TOP_LEVEL_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ndrouter" value="import express from 'express';&#10;import UsersController from '../controllers/UserController';&#10;&#10;const router = express.Router();&#10;&#10;router.post('/', UsersController.index);&#10;&#10;export default router;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="ES6_TOP_LEVEL_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ndfunc" value="static async NAME(req, res, next) {&#10;    try {&#10;      res.json({&#10;        status: 'ok',&#10;      });&#10;    } catch (e) {&#10;      next(e);&#10;    }&#10;  }" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_CLASS" value="true" />
      <option name="JS_CLASS" value="true" />
    </context>
  </template>
  <template name="ndmodel" value="import { DataTypes, Model } from 'sequelize';&#10;import db from '../services/db';&#10;&#10;class B2bCustomers extends Model {&#10;static sync(options) {&#10;    return super.sync({ alter: true, force: true });&#10;  }&#10;}&#10;&#10;B2bCustomers.init({&#10;  id: {&#10;    type: DataTypes.BIGINT,&#10;    primaryKey: true,&#10;    allowNull: false,&#10;    autoIncrement: true,&#10;  },&#10;}, {&#10;  sequelize: db,&#10;  tableName: 'b2b_customers',&#10;  modelName: 'b2bCustomers',&#10;  timestamps: false,&#10;});&#10;&#10;CustomersInfo.belongsTo(Customers, {&#10;  as: 'customer',&#10;  foreignKey: 'customerId',&#10;  onUpdate: 'cascade',&#10;  onDelete: 'cascade',&#10;});&#10;&#10;Customers.hasMany(CustomersInfo, {&#10;  as: 'info',&#10;  foreignKey: 'customerId',&#10;  onUpdate: 'cascade',&#10;  onDelete: 'cascade',&#10;});&#10;&#10;export default B2bCustomers;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="ES6_TOP_LEVEL_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="&lt;abbreviation&gt;" value="import _ from 'lodash';&#10;import Utils from '../services/Utils';&#10;&#10;class Controller {&#10;  static async index(req, res, next) {&#10;    try {&#10;      console.log(111111);&#10;    } catch (e) {&#10;      next(e);&#10;    }&#10;&#10;    res.json({&#10;      status: 'ok',&#10;      message: 'Response',&#10;    });&#10;  }&#10;}&#10;&#10;export default UserController;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="ES6_TOP_LEVEL_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="koafunc" value="static async NAME(ctx) {&#10;    const transaction = await db.transaction();&#10;    try {&#10;      const data = ctx.request.body;&#10;&#10;      await transaction.commit();&#10;&#10;      ctx.status = 200;&#10;      ctx.body = data&#10;    } catch (e) {&#10;      await transaction.rollback();&#10;      throw new SingleError(e.message)&#10;    }&#10;  }" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_CLASS" value="true" />
      <option name="JS_CLASS" value="true" />
    </context>
  </template>
</templateSet>